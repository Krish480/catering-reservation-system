<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>MealMatrix - Menu</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="icon" href="/images/logo.png">
  <link rel="stylesheet" href="./css/style.css">
</head>
<body class="bg-gray-50 font-sans">
  
  <!-- Header -->
  <%- include("../partials/header") %>
  <br><br>

  <!-- Menu Section -->
  <section class="container mx-auto py-12 px-6">
    <h2 class="text-3xl font-bold text-center text-gray-800 mb-6">Our Menu</h2>
    <p class="text-center text-gray-500 mb-10">Choose from our delicious varieties</p>

    <div id="menu-container" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
      <!-- Items dynamically injected -->
    </div>
  </section>

  <!-- Footer -->
  <%- include("../partials/footer") %>

  <script>
  let menuItemsCache = [];
  let cart = JSON.parse(localStorage.getItem('cart')) || [];

  function saveCart(){ 
    localStorage.setItem('cart', JSON.stringify(cart));
    updateCartCount();
  }

  function updateCartCount(){
    const count = cart.reduce((s,i)=> s + (i.quantity||1), 0);
    const el = document.getElementById('cart-count');
    if(el) el.textContent = count;
  }

  function showToast(msg){
    const t = document.createElement('div');
    t.textContent = msg;
    t.className = 'fixed bottom-6 right-6 bg-gray-800 text-white px-4 py-2 rounded shadow';
    document.body.appendChild(t);
    setTimeout(()=> t.remove(), 1700);
  }

  async function loadMenu() {
    const menuContainer = document.getElementById("menu-container");
    menuContainer.innerHTML = "<p class='text-center col-span-3'>Loading menu...</p>";

    try {
      const res = await fetch("/data/menu.json");
      const items = await res.json();
      menuItemsCache = items; 
      menuContainer.innerHTML = "";

      // URL param check
      const params = new URLSearchParams(window.location.search);
      const category = params.get("category");  

      let filteredItems = items;
      if(category){
        filteredItems = items.filter(i => i.category?.toLowerCase() === category.toLowerCase());
      }

      if(filteredItems.length === 0){
        menuContainer.innerHTML = "<p class='text-center text-gray-500 col-span-3'>No items found in this category.</p>";
        return;
      }

      filteredItems.forEach(item => {
        const card = document.createElement('div');
        card.className = 'bg-white p-5 shadow-md rounded-xl hover:shadow-xl transition relative cursor-pointer';
        card.addEventListener('click', ()=> {
          window.location.href = `/product?id=${item.id}`;

        });

        // Offer badge
        if(item.offer){
          const badge = document.createElement('span');
          badge.textContent = item.offer;
          badge.className = 'absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded';
          card.appendChild(badge);
        }

        const img = document.createElement('img');
        img.src = item.imageUrl;
        img.alt = item.name;
        img.className = 'w-full h-50 object-cover rounded-md cursor-pointer drop-shadow-lg';

        const title = document.createElement('h3');
        title.className = 'mt-4 text-lg font-semibold text-gray-800 text-center cursor-pointer';
        title.textContent = item.name;
        title.addEventListener('click', ()=> {
          window.location.href = `/product?id=${item.id}`;

        });

        const price = document.createElement('p');
        price.className = 'text-lg font-bold text-orange-600 mt-2 text-center';
        price.textContent = 'â‚¹' + item.price;

        const btnWrap = document.createElement('div');
        btnWrap.className = 'text-center';

        const btn = document.createElement('button');
        btn.className = 'mt-3 bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700 transition';
        btn.textContent = 'Add to Cart';
        btn.dataset.id = item.id;
        btn.addEventListener('click', () => addToCartById(item.id));

        btnWrap.appendChild(btn);
        card.appendChild(img);
        card.appendChild(title);
        card.appendChild(price);
        card.appendChild(btnWrap);

        menuContainer.appendChild(card);
      });

    } catch (err) {
      console.error(err);
      menuContainer.innerHTML = "<p class='text-red-500'>Failed to load menu data.</p>";
    }
  }

  function addToCartById(id){
    const item = menuItemsCache.find(x => String(x.id) === String(id));
    if(!item){ alert('Item not found'); return; }

    const existing = cart.find(x => String(x.id) === String(id));
    if(existing) existing.quantity = (existing.quantity||1) + 1;
    else cart.push({ id: item.id, name: item.name, price: item.price, imageUrl: item.imageUrl, quantity: 1 });

    saveCart();
    showToast(item.name + ' added to cart ðŸ›’');
  }

  window.addEventListener('DOMContentLoaded', () => {
    loadMenu();
    updateCartCount();
  });
  </script>
</body>
</html>
